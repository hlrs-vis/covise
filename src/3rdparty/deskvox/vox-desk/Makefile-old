# This makefile compiles the FOX Toolkit based shell for VIRVO (Virtual Reality Volume Rendering) 
#
# make: makes the entire project (vconv and vview)
# make release: creates a directory 'release' and copies the executables there

#=============================================================================
# These variables must be set to the respective directories:
#=============================================================================

# Directory of the Virvo library:
VIRVO_LIB = ../virvo

# Directory of the Cg library files:
CG_LIB = ../virvo/lib/amd64

# FOX Toolkit:
FOX_INC = include/fox-1_4
FOX_LIB = FOX-1.4

# Name of Virvo library file:
VIRVO_LIBFILE = virvo

# Stingray:
STINGRAY_LIB = ../virvo/lib/amd64
STINGRAY_INC = -I../stingray/StingRayCave -I../stingray -I../stingray/DataObjects -I../stingray/PAL 

# Compiler:
CC = g++

#=============================================================================
# From now on no changes should need to be made:
#=============================================================================

SRCDIR = src
EXEDIR = bin/linux
OBJDIR = obj
INCDIR = -I$(SRCDIR) -Iinclude -I$(FOX_INC) -I$(VIRVO_LIB) -I$(VIRVO_LIB)/include $(STINGRAY_INC)
LIBDIR = -Llib/amd64 -L$(VIRVO_LIB)/.libs -L$(CG_LIB) -L/usr/X11R6/lib64 -L$(STINGRAY_LIB)
CFLAGS = -g -DHAVE_CG -w
ifeq ($(G_COMPILER_VER),gcc3)
  ifeq ($(USE_STINGRAY),1)
    CFLAGS = -g -DHAVE_CG -w -DUSE_STINGRAY
  endif
endif

#DESKVOX_LIB = -l$(VIRVO_LIBFILE) -ldo -lpal -lstingraycave -lX11 -lXext -ltiff -lpng -l$(FOX_LIB) -lGLU -lGL -lCgGL -lCg -lpthread -lm
DESKVOX_LIB = -l$(VIRVO_LIBFILE) -lX11 -lXext -lXrandr -lXcursor -ltiff -lpng -l$(FOX_LIB) -lGLU -lGL -lCgGL -lCg -lpthread -lm
DESKVOX_EXE = $(EXEDIR)/deskvox

VCONV_LIB = -l$(VIRVO_LIBFILE) -lm -lGLU -lGL -lCgGL -lCg -lpthread 
VCONV_EXE = $(EXEDIR)/vconv

# Let make know which rules don't create files:

.PHONY: clean cleanall

#=============================================================================
# Default make rule:
#=============================================================================

default: makedirs $(VCONV_EXE) $(DESKVOX_EXE)

#=============================================================================
# Object files:
#=============================================================================

DESKVOX_OBJ = \
	$(OBJDIR)/vvartracking.o \
	$(OBJDIR)/vvcanvas.o \
	$(OBJDIR)/vvclient.o \
        $(OBJDIR)/vvdialogs.o \
        $(OBJDIR)/vvmovie.o \
	$(OBJDIR)/vvobjview.o \
        $(OBJDIR)/vvprefwindow.o \
        $(OBJDIR)/vvshell.o \
        $(OBJDIR)/vvsliceviewer.o \
        $(OBJDIR)/vvtranswindow.o

VCONV_OBJ = \
	$(OBJDIR)/vvconv.o

#=============================================================================
# Make rules for object files:
#=============================================================================

$(OBJDIR)/vvartracking.o: $(SRCDIR)/vvartracking.cpp $(SRCDIR)/vvartracking.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvartracking.cpp $(INCDIR) 

$(OBJDIR)/vvcanvas.o: $(SRCDIR)/vvcanvas.cpp $(SRCDIR)/vvcanvas.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvcanvas.cpp $(INCDIR) 

$(OBJDIR)/vvclient.o: $(SRCDIR)/vvclient.cpp $(SRCDIR)/vvclient.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvclient.cpp $(INCDIR)


$(OBJDIR)/vvdialogs.o: $(SRCDIR)/vvdialogs.cpp $(SRCDIR)/vvdialogs.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvdialogs.cpp $(INCDIR) 

$(OBJDIR)/vvmovie.o: $(SRCDIR)/vvmovie.cpp $(SRCDIR)/vvmovie.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvmovie.cpp $(INCDIR) 

$(OBJDIR)/vvobjview.o: $(SRCDIR)/vvobjview.cpp $(SRCDIR)/vvobjview.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvobjview.cpp $(INCDIR)

$(OBJDIR)/vvprefwindow.o: $(SRCDIR)/vvprefwindow.cpp $(SRCDIR)/vvprefwindow.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvprefwindow.cpp $(INCDIR)

$(OBJDIR)/vvshell.o: $(SRCDIR)/vvshell.cpp $(SRCDIR)/vvshell.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvshell.cpp $(INCDIR)

$(OBJDIR)/vvsliceviewer.o: $(SRCDIR)/vvsliceviewer.cpp $(SRCDIR)/vvsliceviewer.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvsliceviewer.cpp $(INCDIR)

$(OBJDIR)/vvtranswindow.o: $(SRCDIR)/vvtranswindow.cpp $(SRCDIR)/vvtranswindow.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvtranswindow.cpp $(INCDIR)

$(OBJDIR)/vvconv.o: $(SRCDIR)/vvconv.cpp $(SRCDIR)/vvconv.h
	$(CC) $(CFLAGS) -o $@ -c $(SRCDIR)/vvconv.cpp $(INCDIR)

#=============================================================================
# Executables:
#=============================================================================

makedirs:
	mkdir -p obj
	mkdir -p bin/linux

cleanexe:
	rm -f $(EXEDIR)/deskvox
	rm -f $(EXEDIR)/vconv

relink: cleanexe
	$(CC) $(CFLAGS) -o $(EXEDIR)/deskvox $(DESKVOX_OBJ) $(LIBDIR) $(DESKVOX_LIB)	
	$(CC) $(CFLAGS) -o $(EXEDIR)/vconv $(VCONV_OBJ) $(LIBDIR) $(VCONV_LIB)

$(DESKVOX_EXE): $(DESKVOX_OBJ) 
	$(CC) $(CFLAGS) -o $@ $(DESKVOX_OBJ) $(LIBDIR) $(DESKVOX_LIB)

$(VCONV_EXE): $(VCONV_OBJ)
	$(CC) $(CFLAGS) -o $@ $(VCONV_OBJ) $(LIBDIR) $(VCONV_LIB)

#=============================================================================
# Release:
#=============================================================================

release:
	mkdir release
	mkdir release/examples
	mkdir release/bin
	mkdir release/bin/linux
	cp bin/linux/vconv release/bin/linux
	cp bin/linux/deskvox release/bin/linux
	cp readme.txt release
	cp license.txt release
	cp examples/*.* release/examples
	cp ../virvo/*.cg release/bin

#=============================================================================
# Clean up:
#=============================================================================

clean: cleanexe
	rm -rf obj/

cleanall: clean cleanexe

### EOF
# DO NOT DELETE
