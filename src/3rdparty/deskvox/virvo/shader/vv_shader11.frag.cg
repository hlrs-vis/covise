// Shader for RGB data sets with alpha blending
//
// Authors: 
// Martin Aumueller <aumueller@uni-koeln.de>

struct PixelIn 
{
  float3 coord3d: TEXCOORD0;
};

float4 main(
  const sampler3D  in uniform pix3dtex : TEXTURE0,
  const sampler2D  in uniform pixLUT,
        PixelIn    in IN) : COLOR0
{
  float4 c = tex3D(pix3dtex, IN.coord3d);  // color as stored in 3D texture
  float4 OUT;           // result after color conversion
	
  OUT.rgb = c.rgb;
  float t = (c.r + c.g + c.b) / 3.0;
  OUT.a = tex2D(pixLUT, float2(t, 0)).a;
                           
  return OUT;
}
// vim: sw=2:expandtab:softtabstop=2:ts=2:cino=\:0g0t0
