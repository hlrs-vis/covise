; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
; windows smart screen process C:\Program Files (x86)\Windows Kits\10\App Certification Kit>appcert test -apptype desktop -setuppath c:\src\covise\DIST\DIST.zebuopt\covise_2022-02-09_zebuopt.exe -appusage peruser -reportoutputpath c:\src\covise\DIST\appcertreport.xml
#define DISTRO_TYPE ""

#define SIMULATION GetEnv("COVISE_SIMULATION")
#if SIMULATION == ""
  #define SIMULATION "NO"
#endif

#define ARCHSUFFIX GetEnv("COVISE_ARCHSUFFIX")
#if ARCHSUFFIX == ""
  #define ARCHSUFFIX GetEnv("ARCHSUFFIX")
#endif


#define COVISEDOCU GetEnv("COVISE_DIST_DOCU")
#if COVISEDOCU == ""
  #define COVISEDOCU GetEnv("COVISEDIR")
#endif
                            
#define VERSIONSTRING GetDateTimeString('yyyy/mm/dd', '.', '');

#define DATA GetEnv("COVISEDIR")+"\example-data"

; get environment variables for extern libs
#define OPENSCENEGRAPH GetEnv("EXTERNLIBS")+"\OpenSceneGraph"
#define OSG_VER_NUM GetEnv("OSG_VER_NUM")
#define OSG_SO_NUM GetEnv("OSG_SO_NUM")
#define OSG_OT_SO_NUM GetEnv("OSG_OT_SO_NUM")

#define CG GetEnv("EXTERNLIBS")+"\cg"
#define QT GetEnv("EXTERNLIBS")+"\qt6"
;#define CUDA GetEnv("CUDA_HOME")
#define CUDAPATH GetEnv("CUDA_PATH")
#define FFMPEG GetEnv("EXTERNLIBS")+"\ffmpeg"
#define PNG GetEnv("EXTERNLIBS")+"\png"
#define GEOS GetEnv("EXTERNLIBS")+"\geos"
#define AUDIOFILE GetEnv("EXTERNLIBS")+"\audiofile"
#define OIV  GetEnv("EXTERNLIBS")+"\OpenInventor"
;#define PERFORMER GetEnv("PERFORMER_HOME")
#define PTHREAD GetEnv("EXTERNLIBS")+"\pthreads"
#define GLUT GetEnv("EXTERNLIBS")+"\glut"
#define GLEW GetEnv("EXTERNLIBS")+"\glew"
#define GSOAP GetEnv("EXTERNLIBS")+"\gsoap"
#define GDAL GetEnv("EXTERNLIBS")+"\gdal"
#define FFTW GetEnv("EXTERNLIBS")+"\fftw"
#define COIN3D  GetEnv("EXTERNLIBS")+"\coin3D"
#define SOQT GetEnv("EXTERNLIBS")+"\coin3D"
;#define CAL3D GetEnv("CAL3D_HOME")
#define VISSDK GetEnv("VISSDK_HOME")
#define DSV GetEnv("DSV_HOME")
#define VTK  GetEnv("EXTERNLIBS")+"\vtk"
#define ITK  GetEnv("EXTERNLIBS")+"\itk"
#define TIFF  GetEnv("EXTERNLIBS")+"\tiff"
#define JPEG  GetEnv("EXTERNLIBS")+"\jpeg"
#define ZLIB  GetEnv("EXTERNLIBS")+"\zlib"
#define BOOST  GetEnv("EXTERNLIBS")+"\boost"
#define XERCES  GetEnv("EXTERNLIBS")+"\xerces"
#if (ARCHSUFFIX == "vista") || (ARCHSUFFIX == "vistaopt")  || (ARCHSUFFIX == "zackelopt") || (ARCHSUFFIX == "zackel")
  #define INTEL GetEnv("F77_HOME")+"\ia32\"
#else
  #define INTEL GetEnv("F77_HOME")+"\em64t\"
#endif
#define PYTHON GetEnv("EXTERNLIBS")+"\python"

#define SIMDATA "R:\data\IHS"

; set the most used pathes
#define COVISEDIR GetEnv("COVISEDIR")
#define EXTERNLIBS GetEnv("EXTERNLIBS")
#define SRC GetEnv("COVISEDIR")+"\src"
#define EXAMPLE GetEnv("COVISEDIR")+"\src\application\examples"

#define DIST COVISEDIR+"\DIST\DIST."+ARCHSUFFIX
#define BIN  COVISEDIR+"\"+ARCHSUFFIX+"\bin"
#define LIB  COVISEDIR+"\"+ARCHSUFFIX+"\lib"
#define DBIN "{app}\"+ARCHSUFFIX+"\bin"
#define DLIB "{app}\"+ARCHSUFFIX+"\lib"

#define DSRC "{app}\src"
#define DOPENCOVER "{app}\src\OpenCOVER"
#define DEXT "{app}\extern_libs"
#define DEXAMPLE "{app}\src\application\examples"
#define COVISEDATA "{app}\share\covise\data"
#define SIMDATAOUT "{app}\simulation"
#define ICONFILE GetEnv("COVISEDIR")+"\share\covise\icons\covise_install.ico"

#define SYSTEMROOT GetEnv("SystemRoot")
#if ARCHSUFFIX == "win32opt"
  #define LABEL "_win32opt"
  #define SYS GetEnv("SystemRoot")+"\system32\msvc*??*.dll"
#elif ARCHSUFFIX == "win32"
  #define LABEL "_win32"
  #define SYS GetEnv("SystemRoot")+"\system32\msvc*??*.dll"
#elif ARCHSUFFIX == "vista"
  #define LABEL "_vista"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
;  #define SYS GetEnv("VCINSTALLDIR")+"\redist\Debug_NonRedist\x86\Microsoft.VC80.DebugCRT\msvc*??*.dll"
#elif ARCHSUFFIX == "vistaopt"
  #define LABEL "_vistaopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "amdwin64"
  #define X64Arch
  #define LABEL "_amdwin64"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "amdwin64opt"
  #define X64Arch
  #define LABEL "_amdwin64opt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "zackel"
  #define LABEL "_zackel"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "zackelopt"
  #define LABEL "_zackelopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "angus"
  #define X64Arch
  #define LABEL "_angus"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "angusopt"
  #define X64Arch
  #define LABEL "_angusopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "berrenda"
  #define X64Arch
  #define LABEL "_berrenda"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "berrendaopt"
  #define X64Arch
  #define LABEL "_berrendaopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "tamarau"
  #define X64Arch
  #define LABEL "_tamarau"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "tamarauopt"
  #define X64Arch
  #define LABEL "_tamarauopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.exe"
#elif ARCHSUFFIX == "zebu"
  #define X64Arch
  #define LABEL "_zebu"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.*"
#elif ARCHSUFFIX == "zebuopt"
  #define X64Arch
  #define LABEL "_zebuopt"
  #define SYS GetEnv("EXTERNLIBS")+"\runtime\*.*"
#else
  #pragma message "Warning: undefined or unknown ARCHSUFFIX! Cannot set SYS variable!"
  #define LABEL "UNKNOWN"
#endif

#define SUFFIX_VERSION GetDateTimeString('yyyy/mm/dd', '-', ':');

#IFDEF UNICODE
  #DEFINE AW "W"
#ELSE
  #DEFINE AW "A"
#ENDIF

[Setup]
;compiler-related
;SignTool=signtool $f

PrivilegesRequired=None
#ifdef X64Arch
ArchitecturesInstallIn64BitMode="x64"
#endif


OutputDir={#DIST}
OutputBaseFilename=covise_{#SUFFIX_VERSION}{#LABEL}

;installer-related
#if (ARCHSUFFIX == "amdwin64") || (ARCHSUFFIX == "amdwin64opt") || (ARCHSUFFIX == "angus") || (ARCHSUFFIX == "angusopt")
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64
#define SUFFIX_ARCH "x64"
#else
#define SUFFIX_ARCH "x86"
#endif

AppName=COVISE
AppVerName=COVISE {#VERSIONSTRING}

AppPublisher=HLRS
AppPublisherURL=http://www.hlrs.de
AppSupportURL=http://www.hlrs.de
AppUpdatesURL=http://www.hlrs.de
ChangesAssociations=true
ChangesEnvironment=true
DefaultDirName={reg:HKLM\SOFTWARE\COVISE,Path|{autopf}\COVISE}
DefaultGroupName={reg:HKLM\SOFTWARE\COVISE,StartMenu|COVISE}
DisableStartupPrompt=true
; cosmetic
SetupIconFile={#ICONFILE}
ShowLanguageDialog=yes

[Types]
Name: standard; Description: COVISE Standard Installation
Name: custom; Description: Custom Installation; Flags: iscustom
Name: retistry; Description: Registry only, donï¿½t install any files
[Components]

Name: core; Description: COVISE core system; Types: standard custom
Name: help; Description: COVISE help and tutorial system; Types: standard custom
Name: example; Description: COVISE example modules, maps and data; Types: standard custom
Name: opencover; Description: OpenSceneGraph based VR renderer; Types: standard custom
Name: python; Description: COVISE python interpreter; Types: standard custom
Name: vrprepare4; Description: User interface for VR preparation; Types: standard custom
Name: surfacecover; Description: MS Surface VR renderer; Types: standard custom

#if SIMULATION == "YES"
;Name: application/simulation; Description: "COVISE Simulation project "; Types: standard custom
#endif


[Files]

;Source: {#COVISEDIR}\README.windows; DestDir: {app}; DestName: README.txt; Components: core
Source: {#COVISEDIR}\config\config.xml; DestDir: {app}\config; Components: core
Source: {#COVISEDIR}\config\config?ar.xml; DestDir: {app}\config; Components: core 
Source: {#COVISEDIR}\config\config?colormaps.xml; DestDir: {app}\config; Components: core   
Source: {#COVISEDIR}\config\config-midi.xml; DestDir: {app}\config; Components: core
Source: {#COVISEDIR}\config\config-sumo.xml; DestDir: {app}\config; Components: core
Source: {#COVISEDIR}\config\config-filetypes.xml; DestDir: {app}\config; Components: core
Source: {#COVISEDIR}\config\config-spray.xml; DestDir: {app}\config; Components: core
Source: {#COVISEDIR}\config\*.xml; DestDir: {app}\config\examples; Excludes: config.xml config-*.xml; Components: core
;Source: {#COVISEDIR}\mkspecs\*; DestDir: {app}\covise\mkspecs; Components: core
Source: {#COVISEDIR}\share\*; DestDir: {app}\share; Excludes: .svn\*; Flags: recursesubdirs; Components: core
Source: {#COVISEDIR}\src\3rdparty\deskvox\virvo\shader\*; DestDir: {app}\share\covise\shaders; Excludes: .svn\*; Flags: recursesubdirs; Components: core


Source: {#BIN}\*.exe; DestDir: {#DBIN}; Components: core
Source: {#BIN}\*.dll; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#LIB}\*.dll; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#LIB}\*.lib; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core

;microsoft mpi for opencover
Source: c:\windows\system32\msmpi*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core     


#if ARCHSUFFIX == "vista"
Source: {#EXTERNLIBS}\runtime\vcredist_x86_sp1_secfix.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "vistaopt"
Source: {#EXTERNLIBS}\runtime\vcredist_x86_sp1_secfix.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "amdwin64"
Source: {#EXTERNLIBS}\runtime\vcredist_x64_sp1_secfix.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "amdwin64opt"
Source: {#EXTERNLIBS}\runtime\vcredist_x64_sp1_secfix.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "zackel"
Source: {#EXTERNLIBS}\runtime\vcredist_x86.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "zackelopt"
Source: {#EXTERNLIBS}\runtime\vcredist_x86.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "angus"
Source: {#EXTERNLIBS}\runtime\vcredist_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "tamarau"
Source: {#EXTERNLIBS}\runtime\vcredist_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\vcredist2010_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\vcredist_x86.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\mpi_x64.Msi; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "tamarauopt"
Source: {#EXTERNLIBS}\runtime\vcredist_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\vcredist2010_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\vcredist_x86.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\runtime\mpi_x64.Msi; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#elif ARCHSUFFIX == "angusopt"
Source: {#EXTERNLIBS}\runtime\vcredist_x64.exe; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
#endif
Source: {#EXTERNLIBS}\runtime\_version.txt; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core


Source: {#BIN}\Converter\*.exe; DestDir: {#DBIN}\Converter; Flags: recursesubdirs; Components: core
Source: {#BIN}\Filter\*.exe; DestDir: {#DBIN}\Filter; Flags: recursesubdirs; Components: core
Source: {#BIN}\Interpolator\*.exe; DestDir: {#DBIN}\Interpolator; Flags: recursesubdirs; Components: core
Source: {#BIN}\IO\*.exe; DestDir: {#DBIN}\IO; Flags: recursesubdirs; Components: core
Source: {#BIN}\Mapper\*.exe; DestDir: {#DBIN}\Mapper; Flags: recursesubdirs; Components: core
Source: {#BIN}\Tools\*.exe; DestDir: {#DBIN}\Tools; Flags: recursesubdirs; Components: core
; Source: {#BIN}\Tracer\*.exe; DestDir: {#DBIN}\Tracer; Flags: recursesubdirs; Components: core
Source: {#BIN}\Obsolete\*.exe; DestDir: {#DBIN}\Obsolete; Flags: recursesubdirs skipifsourcedoesntexist; Components: core

Source: {#EXTERNLIBS}\coin3d\bin\*.dll; DestDir: {#DLIB}; Components: core


; common Python scripting interface of COVISE
Source: {#COVISEDIR}\bin\runCoviseScriptIF.bat; DestDir: {app}; Components: vrprepare4
Source: {#COVISEDIR}\bin\runVRPrepare4.bat; DestDir: {app}; Components: vrprepare4
Source: {#COVISEDIR}\bin\runTecplot2Covise.bat; DestDir: {app}; Components: vrprepare4
Source: {#COVISEDIR}\bin\runCoCaseEditor.bat; DestDir: {app}; Components: vrprepare4
Source: {#COVISEDIR}\bin\runCfx2Covise.bat; DestDir: {app}; Components: vrprepare4
Source: {#COVISEDIR}\Python\*.pyc; DestDir: {app}\Python; Flags: skipifsourcedoesntexist; Components: vrprepare4
Source: {#COVISEDIR}\Python\*.py; DestDir: {app}\Python; Components: vrprepare4
Source: {#COVISEDIR}\Python\scriptInterface.bat; DestDir: {app}\Python; Components: vrprepare4
Source: {#COVISEDIR}\Python\coPyModules.py; DestDir: {app}\Python; Components: vrprepare4
;Source: {#LIB}\*.pyc; DestDir: {app}\Python; Flags: recursesubdirs; Components: vrprepare4
Source: {#LIB}\*.pyd; DestDir: {app}\Python; Flags: recursesubdirs; Components: vrprepare4
Source: {#LIB}\*.py; DestDir: {app}\Python; Flags: skipifsourcedoesntexist; Components: vrprepare4

; files related to vr-prepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\*.pyc; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
;Source: {#COVISEDIR}\Python\bin\vr-prepare\*.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\vr-prepare.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
;Source: {#COVISEDIR}\Python\bin\vr-prepare\InternalConfig.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\PatienceDialogManager.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\PatienceDialog.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\CocaseEditor.py; DestDir: {app}\Python\bin\vr-prepare; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\converters\tecplot2covise.py; DestDir: {app}\Python\bin\vr-prepare\converters; Flags: recursesubdirs; Components: vrprepare4
Source: {#COVISEDIR}\Python\bin\vr-prepare\converters\cfx2covise.py; DestDir: {app}\Python\bin\vr-prepare\converters; Flags: recursesubdirs; Components: vrprepare4


Source: {#BIN}\UnderDev\*.exe; DestDir: {#DBIN}\UnderDev; Flags: recursesubdirs skipifsourcedoesntexist; Components: core
Source: {#BIN}\Unsupported\*.exe; DestDir: {#DBIN}\Unsupported; Flags: recursesubdirs skipifsourcedoesntexist; Components: core
Source: {#BIN}\VISiT\*.exe; DestDir: {#DBIN}\VISiT; Flags: recursesubdirs skipifsourcedoesntexist; Components: core
Source: {#BIN}\Simulation\*.exe; DestDir: {#DBIN}\Simulation; Flags: recursesubdirs skipifsourcedoesntexist; Components: core

Source: {#COVISEDIR}\scripts\windowsEnv.bat; DestDir: {app}; Components: core
Source: {#COVISEDIR}\bin\*.bat; DestDir: {app}\bin; Components: core
Source: {#COVISEDIR}\scripts\*; DestDir: {app}\scripts; Components: core


Source: {#EXTERNLIBS}\python\*; DestDir: {app}\extern_libs\python; Flags: recursesubdirs skipifsourcedoesntexist; Components: python

; we are using Qt version >= 4.5.0 LGPL
Source: {#QT}\bin\*.dll; DestDir: {#DLIB}; Components: core
Source: {#QT}\bin\QtWebEngineProcess*.exe; DestDir: {#DBIN}; Components: core
Source: {#QT}\plugins\*.dll; DestDir: {#DLIB}\plugins; Flags: recursesubdirs; Components: core
Source: {#QT}\resources\*; DestDir: {#DLIB}\resources; Flags: recursesubdirs; Components: core
Source: {#QT}\translations\*; DestDir: {#DLIB}\translations; Flags: recursesubdirs; Components: core
Source: {#EXTERNLIBS}\icu\bin64\*.dll; DestDir: {#DBIN}; Components: core                             
Source: {#EXTERNLIBS}\all\archive.dll; DestDir: {#DBIN}; Components: core                   
Source: {#EXTERNLIBS}\glfw\bin\*.dll; DestDir: {#DBIN}; Components: core
Source: {#EXTERNLIBS}\tbb\bin\intel64\vc11\*.dll; DestDir: {#DBIN}; Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\tbb\bin\intel64\vc14\*.dll; DestDir: {#DBIN}; Flags: skipifsourcedoesntexist; Components: core
Source: {#PTHREAD}\lib\*.dll; DestDir: {#DLIB}; Components: core
Source: {#PNG}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#PNG}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core     
Source: {#EXTERNLIBS}\libpng\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\libpng\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core    
Source: {#EXTERNLIBS}\OpenVR\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core

Source: {#EXTERNLIBS}\fmod\lowlevel\lib\*64.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\fmod\studio\lib\*64.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\SDL\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\NatNetSDK\lib\x64\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#GEOS}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#CG}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#CUDAPATH}\bin\cudart*.dll; Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: core
Source: {#GLEW}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#GLEW}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#CUDAPATH}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#FFMPEG}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#BOOST}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#INTEL}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core

Source: {#SYS}; DestDir: {#DLIB}; Flags: recursesubdirs; Components: core
;Source: {#XERCES}\bin\*.exe; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#XERCES}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core
Source: {#XERCES}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core

Source: {#COVISEDOCU}\doc\html\*; DestDir: {app}\doc\html; Excludes: .svn\*,*.tex,*.aux,*.log,*.pl,WARNINGS; Flags: recursesubdirs; Components: help
Source: {#COVISEDOCU}\doc\pdf\*; DestDir: {app}\doc\pdf; Excludes: .svn\*; Flags: skipifsourcedoesntexist; Components: help
Source: {#COVISEDIR}\net\tutorial\*; DestDir: {app}\net\tutorial; Excludes: .svn\*; Flags: recursesubdirs; Components: help
Source: c:\data\cal3d\*; DestDir: {#COVISEDATA}\; Excludes: .svn\*; Flags: recursesubdirs; Components: help

Source: {#COVISEDIR}\net\examples\*; DestDir: {app}\net\examples; Excludes: .svn\*; Flags: recursesubdirs; Components: example

Source: {#BIN}\Renderer\OpenCOVER.exe; DestDir: {#DBIN}\Renderer; Flags: recursesubdirs; Components: opencover
Source: {#BIN}\Renderer\SurfaceCOVER.exe; DestDir: {#DBIN}\Renderer; Flags: recursesubdirs skipifsourcedoesntexist; Components: surfacecover
Source: {#BIN}\Renderer\VRMLRenderer.exe; DestDir: {#DBIN}\Renderer; Flags: recursesubdirs; Components: core
Source: {#OPENSCENEGRAPH}\bin\osg{#OSG_SO_NUM}*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#OPENSCENEGRAPH}\bin\ot{#OSG_OT_SO_NUM}*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#OPENSCENEGRAPH}\bin\osgPlugins-{#OSG_VER_NUM}\*; DestDir: {#DLIB}; Components: opencover
; now using VideoInput Source: {#EXTERNLIBS}\DSVL\bin\*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\OpenAL\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\Cal3d\bin\*.dll; DestDir: {#DLIB}; Components: opencover               
Source: {#EXTERNLIBS}\gdcm\bin\*.dll; DestDir: {#DLIB}; Components: core
Source: {#EXTERNLIBS}\osgCal\bin\*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\osgEphemeris\bin\*.dll; DestDir: {#DLIB}; Components: opencover      
Source: C:\src\externlibs\zebu\PhysX\bin\win.x86_64.vc142.md\release\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: core    
Source: C:\Program Files\NVIDIA Corporation\NVSMI\nvml.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\Proj4\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\embree\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\ALVAR\bin\*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\ALVAR\bin\alvarplugins\*.dll; DestDir: {#DLIB}\alvarplugins; Components: opencover
;Source: {#EXTERNLIBS}\opencv\build\x64\vc10\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover
;Source: {#EXTERNLIBS}\opencv3\x64\vc11\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\OpenCV2\x64\vc14\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover  
Source: {#EXTERNLIBS}\opencv4\x64\vc17\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover  
Source: {#EXTERNLIBS}\ifcpp\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover 
Source: {#EXTERNLIBS}\u3d\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover
Source: c:\Program Files\Point Grey Research\FlyCapture2\bin64\*v110.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover
Source: c:\Program Files\Point Grey Research\FlyCapture2\bin64\vs2015\*v140.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover


;Source: {#EXTERNLIBS}\opencv\build\x64\vc11\bin\*.dll;  Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover

Source: {#EXTERNLIBS}\collada\lib\*.dll; DestDir: {#DLIB};  Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\cudpp\bin\*.dll; DestDir: {#DLIB};  Flags: skipifsourcedoesntexist; Components: core
Source: {#EXTERNLIBS}\vtk\bin\*.dll; DestDir: {#DLIB}; Components: core
Source: {#AUDIOFILE}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#FFTW}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#GDAL}\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#TIFF}\bin\*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#JPEG}\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#ZLIB}\bin\*.dll; DestDir: {#DLIB}; Components: opencover
;Source: {#OIV}\lib\*.dll; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\OpenSSL\bin\*.dll; DestDir: {#DLIB}; Components: core
Source: {#EXTERNLIBS}\osgEarth\bin\*.dll; Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover
Source: {#EXTERNLIBS}\osgEarth\bin\osgPlugins-{#OSG_VER_NUM}\*.dll; Flags: skipifsourcedoesntexist; DestDir: {#DLIB}; Components: opencover

Source: {#EXTERNLIBS}\curl\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\Xerces\lib\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover
Source: {#EXTERNLIBS}\Xerces\bin\*.dll; DestDir: {#DLIB}; Flags: skipifsourcedoesntexist; Components: opencover

Source: {#LIB}\OpenCOVER\plugins\*.dll; DestDir: {#DLIB}\OpenCOVER\plugins; Flags: recursesubdirs; Components: opencover
Source: {#LIB}\OpenCOVER\plugins\*.lib; DestDir: {#DLIB}\OpenCOVER\plugins; Flags: recursesubdirs; Components: opencover
Source: {#EXTERNLIBS}\PtGrey\bin\*.dll; DestDir: {#DLIB};Flags: skipifsourcedoesntexist; Components: opencover
#if (ARCHSUFFIX == "vista") || (ARCHSUFFIX == "vistaopt")
Source: {#EXTERNLIBS}\PCAN-Light\*.dll; DestDir: {#DLIB}; Components: opencover
#endif
Source: {#OIV}\lib\*.dll; DestDir: {#DLIB};Flags: skipifsourcedoesntexist; Components: opencover



#if SIMULATION == "YES"
Source: {#BIN}\ViSIT\*.exe; DestDir: {#DBIN}\ViSIT; Components: application/simulation

Source: {#SIMDATA}\bin\flow_covise; DestDir: {#SIMDATAOUT}\bin; Components: application/simulation
Source: {#SIMDATA}\bin\flow.exe; DestDir: {#SIMDATAOUT}\bin; Components: application/simulation

Source: {#SIMDATA}\gate\flow.stf; DestDir: {#SIMDATAOUT}\gate; Components: application/simulation
Source: {#SIMDATA}\gate\press.rb; DestDir: {#SIMDATAOUT}\gate; Components: application/simulation

Source: {#SIMDATA}\domdec\zerno.stf; DestDir: {#SIMDATAOUT}\domdec; Components: application/simulation
Source: {#SIMDATA}\domdec\zer\*; DestDir: {#SIMDATAOUT}\domdec\zer; Components: application/simulation

Source: {#SIMDATA}\example_data\gate_low.cfg; DestDir: {#SIMDATAOUT}\example_data; Components: application/simulation
Source: {#SIMDATA}\example_data\gate_kieb.cfg DestDir: {#SIMDATAOUT}\example_data; Components: application/simulation
Source: {#SIMDATA}\example_data\gate_mini.cfg; DestDir: {#SIMDATAOUT}\example_data; Components: application/simulation
Source: {#SIMDATA}\example_data\my_dummy.bc; DestDir: {#SIMDATAOUT}\example_data; Components: application/simulation
#endif

             
[Dirs]
Name: "{app}"; 
Name: "{app}\config"; Permissions: everyone-full    
Name: "{app}\share\covise\catalogs"; Permissions: everyone-full




[Registry]
Root: HKCU; Subkey: Environment; ValueType: string; ValueName: ALVAR_PLUGIN_PATH; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib\alvarplugins; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()


; for user installation
Root: HKCU; Subkey: Environment; ValueType: string; ValueName: ARCHSUFFIX; ValueData: {#ARCHSUFFIX}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()
Root: HKCU; Subkey: Environment; ValueType: string; ValueName: PATH; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin;{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\renderer;{code:GetShortName|{app}}\{#ARCHSUFFIX}\lib\OpenCOVER\plugins;{code:GetShortName|{app}}\{#ARCHSUFFIX}\lib\sgplugins;{olddata}"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()

Root: HKCU; Subkey: Environment; ValueType: string; ValueName: COVISEDIR; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()
Root: HKCU; Subkey: Environment; ValueType: string; ValueName: COVISEDESTDIR; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()
Root: HKCU; Subkey: Environment; ValueType: string; ValueName: COVISE_PATH; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()


Root: HKCU; Subkey: Environment; ValueType: string; ValueName: EXTERNLIBS; ValueData: {code:getShortAppDir|{app}}\extern_libs; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForUser()

; end for user installation
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Session Manager\Environment; ValueType: string; ValueName: ARCHSUFFIX; ValueData: {#ARCHSUFFIX}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Session Manager\Environment; ValueType: string; ValueName: COVISEDIR; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Session Manager\Environment; ValueType: string; ValueName: COVISEDESTDIR; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Session Manager\Environment; ValueType: string; ValueName: COVISE_PATH; ValueData: {code:getShortAppDir|{app}}; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SYSTEM\CurrentControlSet\Control\Session Manager\Environment; ValueType: string; ValueName: EXTERNLIBS; ValueData: {code:getShortAppDir|{app}}\extern_libs; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()

Root: HKCU; Subkey: Environment; ValueType: string; ValueName: ALVAR_PLUGIN_PATH; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib\alvarplugins; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\coviseDaemon.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\coviseDaemon.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\tabletui.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\TabletUI.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()             
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\vrb.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\vrb.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\oddlot.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\oddlot.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\carsound.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\carSound.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\OpenCOVER.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\Renderer\OpenCOVER.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\SurfaceCOVER.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\Renderer\SurfaceCOVER.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\covise.exe; ValueType: string; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\covise.exe; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\coviseDaemon.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll() 
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\tabletui.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\vrb.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\oddlot.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\carSound.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\OpenCOVER.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}}\{#ARCHSUFFIX}\lib\OpenCOVER\plugins;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;{app}\{#ARCHSUFFIX}\OpenCOVER\plugins;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\SurfaceCOVER.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}}\{#ARCHSUFFIX}\lib\OpenCOVER\plugins;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;{app}\{#ARCHSUFFIX}\OpenCOVER\plugins;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\covise.exe; ValueType: string; ValueName: Path; ValueData: "{code:getShortAppDir|{app}}\{#ARCHSUFFIX}\lib;{app}}\{#ARCHSUFFIX}\lib\OpenCOVER\plugins;{app}\{#ARCHSUFFIX}\bin;{app}\{#ARCHSUFFIX}\bin\renderer;"; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()

Root: HKCR; Subkey: .wrl; ValueType: string; ValueName: ; ValueData: VRMLFile; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKCR; Subkey: .wrz; ValueType: string; ValueName: ; ValueData: VRMLFile; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKCR; Subkey: .wrl.gz; ValueType: string; ValueName: ; ValueData: VRMLFile; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKCR; Subkey: VRMLFile\shell\Open\command; ValueType: string; ValueName: ; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\Renderer\OpenCOVER.exe %1; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKCR; Subkey: .net; ValueType: string; ValueName: ; ValueData: CoviseFile; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKCR; Subkey: CoviseFile\shell\Open\command; ValueType: string; ValueName: ; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\covise.exe %1; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()

; end for global installation
Root: HKCR; Subkey: VRMLFile\shell\Open\command; ValueType: string; ValueName: ; ValueData: {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\Renderer\opencover.exe %1; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallForAll()
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Run; ValueType: string; ValueName: CoviseDaemon; ValueData: "{sys}\cmd /c ""%COVISEDIR%\scripts\windowsEnv.bat && start /min {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\coviseDaemon.exe"""; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallcoviseDaemonForAll()

Root: HKCU; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Run; ValueType: string; ValueName: CoviseDaemon; ValueData: "{sys}\cmd /c ""%COVISEDIR%\scripts\windowsEnv.bat && start /min {code:getShortAppDir|{app}}\{#ARCHSUFFIX}\bin\coviseDaemon.exe"""; Flags: uninsdeletekeyifempty uninsdeletevalue; Check: InstallcoviseDaemonForUser()


[INI]
Filename: {#DBIN}\qt.conf; Section: Paths
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Prefix; String: {code:GetWithForwardSlashes|{code:GetShortName|{#DLIB}}}
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Documentation; String: doc
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Headers; String: include
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Libraries; String: lib
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Binaries; String: bin
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Plugins; String: plugins
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Translations; String: translations
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Examples; String: examples
Filename: {#DBIN}\qt.conf; Section: Paths; Key: Demos; String: demos

Filename: {#DBIN}\Renderer\qt.conf; Section: Paths
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Prefix; String: {code:GetWithForwardSlashes|{code:GetShortName|{#DLIB}}}
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Documentation; String: doc
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Headers; String: include
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Libraries; String: lib
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Binaries; String: bin
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Plugins; String: plugins
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Translations; String: translations
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Examples; String: examples
Filename: {#DBIN}\Renderer\qt.conf; Section: Paths; Key: Demos; String: demos


[UninstallDelete]
Type: files; Name: {#DEXT}\qt\bin\qt.conf

[Tasks]
Name: desktopicon; Description: Icons on &Desktop; GroupDescription: Desctop Icons:
Name: startupcion; Description: Icons into &Startup; GroupDescription: Startup Icons:; Flags: unchecked


[Icons]
Name: {group}\COVISE; Filename: {app}\{#ARCHSUFFIX}\bin\covise.exe; Comment: Start COVISE; IconFilename: {app}\share\covise\icons\covise.ico; Flags: createonlyiffileexists dontcloseonexit
Name: {group}\OpenCOVER; Filename: {app}\{#ARCHSUFFIX}\bin\Renderer\OpenCOVER.exe; Comment: OpenSceneGraph COVISE VR Renderer; IconFilename: {app}\share\covise\icons\cover.ico; Flags: createonlyiffileexists
Name: {group}\Tablet UI; Filename: {app}\{#ARCHSUFFIX}\bin\tabletUI.exe; Comment: COVISE Tablet User Interface; IconFilename: {app}\share\covise\icons\tabletui.ico; Flags: createonlyiffileexists                   
Name: {group}\VRB; Filename: {app}\{#ARCHSUFFIX}\bin\vrb.exe; Comment: COVISE Collaboration server; IconFilename: {app}\share\covise\icons\vrb.ico; Flags: createonlyiffileexists
Name: {group}\OddLOT; Filename: {app}\{#ARCHSUFFIX}\bin\oddlot.exe; Comment: OpenDRIVE Designer; IconFilename: {app}\share\covise\icons\oddlot.ico; Flags: createonlyiffileexists
Name: {group}\COVISE Shell; Filename: {cmd}; Parameters: /K cd %COVISEDIR% && scripts\windowsEnv.bat; WorkingDir: {app}; Comment: Command Prompt with COVISE Environment; IconFilename: {app}\share\covise\icons\covise_shell.ico
Name: {group}\COVISE Daemon; Filename: {app}\{#ARCHSUFFIX}\bin\coviseDaemon.exe; WorkingDir: {app}; Comment: COVISE Daemon, starts COVISE or Fenfloss; IconFilename: {app}\share\covise\icons\covise.ico
Name: {group}\VRPrepare; Filename: {app}\bin\runVRPrepare4.bat; WorkingDir: {app}; IconFilename: {app}\share\covise\icons\covise.ico; Flags: createonlyiffileexists; Comment: Starts VRPrepare; Components: vrprepare4

Name: {group}\Documentation\Tutorial; Filename: {app}\doc\pdf\tutorial.pdf; Flags: createonlyiffileexists
Name: {group}\Documentation\Users' Guide; Filename: {app}\doc\pdf\usersguide.pdf; Flags: createonlyiffileexists
Name: {group}\Documentation\Reference Guide; Filename: {app}\doc\pdf\refguide.pdf; Flags: createonlyiffileexists
Name: {group}\Documentation\Programming Guide; Filename: {app}\doc\pdf\programmingguide.pdf; Flags: createonlyiffileexists
Name: {group}\Documentation\COVER Config Guide; Filename: {app}\doc\pdf\cover_inst_config.pdf; Flags: createonlyiffileexists
Name: {group}\Uninstall COVISE; Filename: {uninstallexe}

Name: {commondesktop}\COVISE; Filename: {app}\{#ARCHSUFFIX}\bin\covise.exe; Comment: Start COVISE; IconFilename: {app}\share\covise\icons\covise.ico; Flags: createonlyiffileexists; Tasks: desktopicon
Name: {commondesktop}\OpenCOVER; Filename: {app}\{#ARCHSUFFIX}\bin\Renderer\OpenCOVER.exe; Comment: OpenSceneGraph COVISE VR Renderer; IconFilename: {app}\share\covise\icons\cover.ico; Flags: createonlyiffileexists; Tasks: desktopicon
Name: {commondesktop}\Tablet UI; Filename: {app}\{#ARCHSUFFIX}\bin\tabletUI.exe; Comment: COVISE Tablet User Interface; IconFilename: {app}\share\covise\icons\tabletui.ico; Flags: createonlyiffileexists; Tasks: desktopicon      
Name: {commondesktop}\OddLOT; Filename: {app}\{#ARCHSUFFIX}\bin\oddlot.exe; Comment: OpenDRIVE Designer; IconFilename: {app}\share\covise\icons\oddlot.ico; Flags: createonlyiffileexists; Tasks: desktopicon 
;Name: {commondesktop}\COVISE Cleaner; Filename: {cmd}; Parameters: """/K clean_covise.bat"""; WorkingDir: {app}\bin; Comment: Clean COVISE Processes; IconFilename: {app}\share\covise\icons\covise_clean.ico; Tasks: desktopicon
;Name: {commondesktop}\COVISE Daemon; Filename: {app}\{#ARCHSUFFIX}\bin\coviseDaemon.exe; WorkingDir: {app}; Comment: COVISE Daemon, starts covise or Fenfloss; IconFilename: {app}\share\covise\icons\covise.ico; Tasks: desktopicon


[Run]
; Filename: regsvr32.exe; Parameters: /s {#DLIB}\DsRendererd.ax; Description: Register Rendering filter; Flags: nowait postinstall
#if ARCHSUFFIX == "vista"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x86_sp1_secfix.exe; Parameters: /Q; Description: Install VisualStudio 2005 SP1 Runtime (incl. ATL sec.fix); Flags: postinstall shellexec
#elif ARCHSUFFIX == "vistaopt"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x86_sp1_secfix.exe; Parameters: /Q; Description: Install VisualStudio 2005 SP1 Runtime (incl. ATL sec.fix); Flags: postinstall shellexec
#elif ARCHSUFFIX == "amdwin64"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x64_sp1_secfix.exe; Parameters: /Q; Description: Install VisualStudio 2005 SP1 Runtime (incl. ATL sec.fix); Flags: postinstall shellexec
#elif ARCHSUFFIX == "tamarau"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x64.exe; Parameters: /Q; Description: Installing VisualStudio 2012 Runtime; Flags: postinstall shellexec
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist2010_x64.exe; Parameters: /Q; Description: Install VisualStudio 2010 x64 Runtime; Flags: postinstall shellexec
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x86.exe; Parameters: /Q; Description: Install VisualStudio 2010 x86 Runtime; Flags: postinstall shellexec
Filename: "msiexec.exe"; Parameters: "/I ""{app}\{#ARCHSUFFIX}\lib\mpi_x64.Msi"" /qb"; Description: Installint MS-MPI Runtime; Flags: postinstall shellexec
#elif ARCHSUFFIX == "tamarauopt"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x64.exe; Parameters: /Q; Description: Install VisualStudio 2012 Runtime; Flags: postinstall shellexec
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist2010_x64.exe; Parameters: /Q; Description: Install VisualStudio 2010 x64 Runtime; Flags: postinstall shellexec
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x86.exe; Parameters: /Q; Description: Install VisualStudio 2010 x86 Runtime; Flags: postinstall shellexec
Filename: "msiexec.exe"; Parameters: "/I ""{app}\{#ARCHSUFFIX}\lib\mpi_x64.Msi"" /qb"; Description: Installint MS-MPI Runtime; Flags: postinstall shellexec   
#elif ARCHSUFFIX == "zebuopt"
Filename: {app}\{#ARCHSUFFIX}\lib\bin\vcredist_x64.exe; Parameters: /Q; Check: VCRedist1264NeedsInstall; Description: Install VisualStudio 2012 x64 Runtime; Flags: postinstall    
Filename: {app}\{#ARCHSUFFIX}\lib\bin\vcredist_x86.exe; Parameters: /Q; Check: VCRedist1286NeedsInstall; Description: Install VisualStudio 2010 x86 Runtime; Flags: postinstall
Filename: {app}\{#ARCHSUFFIX}\lib\bin\vc_redist.x64.exe; Parameters: /Q; Check: VCRedistBundleNeedsInstall; Description: Install VisualStudio 2015-19 x64 Runtimes; Flags: postinstall
Filename: "msiexec.exe"; Parameters: "/I ""{app}\{#ARCHSUFFIX}\lib\bin\mpi_x64.Msi"" /qb"; Check: MSMPINeedsInstall; Description: Install MS-MPI Runtime; Flags: postinstall   
Filename: {app}\{#ARCHSUFFIX}\lib\bin\w_cproc_p_11.1.072_redist_intel64.exe; Parameters: /S /v/qn; Description: Install Intel Runtime; Flags: postinstall

#elif ARCHSUFFIX == "amdwin64opt"
Filename: {app}\{#ARCHSUFFIX}\lib\vcredist_x64_sp1_secfix.exe; Parameters: /Q; Description: Install VisualStudio 2005 SP1 Runtime (incl. ATL sec.fix); Flags: postinstall shellexec
#endif
; donï¿½t run because environment is not yet up to date...Filename: {app}\{#ARCHSUFFIX}\bin\coviseDaemon.exe; Parameters: ; Description: Start COVISE Daemon; Flags: nowait postinstall shellexec
          
[UninstallDelete]   
Type: files; Name: "{commonappdata}\Autodesk\Revit\Addins\2023\OpenFOAMInterface.addin"
Type: files; Name: "{commonappdata}\Autodesk\Revit\Addins\2023\OpenCOVER.addin"

[Code]
           

program Setup;


var

  CheckInstallRevitPlugin,CheckInstallForAll,CheckInstallcoviseDaemon,CheckInstallcoviseDaemonForAll: TCheckBox;
  UNCPathName: TEdit;
  Page: TWizardPage;

type
  INSTALLSTATE = Longint;

  const
  INSTALLSTATE_INVALIDARG = -2;  { An invalid parameter was passed to the function. }
  INSTALLSTATE_UNKNOWN = -1;     { The product is neither advertised or installed. }
  INSTALLSTATE_ADVERTISED = 1;   { The product is advertised but not installed. }
  INSTALLSTATE_ABSENT = 2;       { The product is installed for a different user. }
  INSTALLSTATE_DEFAULT = 5;      { The product is installed for the current user. }
 
  VC_2012_REDIST_X64_MIN = '{CF2BEA3C-26EA-32F8-AA9B-331F7E34BA97}';
  VC_2012_REDIST_X86_MIN = '{BD95A8CD-1D9F-35AD-981A-3E7925026EBB}';
  MSMPI_KEY = '{8499ACD3-C1E3-45AB-BF96-DA491727EBE1}';
  INTEL_RUNTIME = '';

  VC_2015_2019_REDIST_X64_BUNDLE = '{852adda4-4c78-4a38-b583-c0b360a329d6}';
            

function MsiQueryProductState(szProduct: string): INSTALLSTATE; 
  external 'MsiQueryProductState{#AW}@msi.dll stdcall';

function VCVersionInstalled(const ProductID: string): Boolean;
begin
  Result := MsiQueryProductState(ProductID) = INSTALLSTATE_DEFAULT;
end;
          
function VCRedistBundleNeedsInstall: Boolean;
begin
  Result := not VCVersionInstalled(VC_2015_2019_REDIST_X64_BUNDLE);
end;
function VCRedist1264NeedsInstall: Boolean;
begin
  Result := not VCVersionInstalled(VC_2012_REDIST_X64_MIN);
end;
function VCRedist1286NeedsInstall: Boolean;
begin
  Result := not VCVersionInstalled(VC_2012_REDIST_X86_MIN);
end;

function MSMPINeedsInstall: Boolean;
begin
  Result := not VCVersionInstalled(MSMPI_KEY);
end;
function IntelNeedsInstall: Boolean;
begin
  Result := not VCVersionInstalled(INTEL_RUNTIME);
end;


procedure FormButtonOnClick(Sender: TObject);
var
  Form: TSetupForm;
  OKButton, CancelButton: TButton;
begin
  Form := CreateCustomForm();
  try
    Form.ClientWidth := ScaleX(256);
    Form.ClientHeight := ScaleY(256);
    Form.Caption := 'TSetupForm';
    //Form.CenterInsideControl(WizardForm, False);

    OKButton := TButton.Create(Form);
    OKButton.Parent := Form;
    OKButton.Width := ScaleX(75);
    OKButton.Height := ScaleY(23);
    OKButton.Left := Form.ClientWidth - ScaleX(75 + 6 + 75 + 10);
    OKButton.Top := Form.ClientHeight - ScaleY(23 + 10);
    OKButton.Caption := 'OK';
    OKButton.ModalResult := mrOk;

    CancelButton := TButton.Create(Form);
    CancelButton.Parent := Form;
    CancelButton.Width := ScaleX(75);
    CancelButton.Height := ScaleY(23);
    CancelButton.Left := Form.ClientWidth - ScaleX(75 + 10);
    CancelButton.Top := Form.ClientHeight - ScaleY(23 + 10);
    CancelButton.Caption := 'Cancel';
    CancelButton.ModalResult := mrCancel;
    CancelButton.Cancel := True;

    Form.ActiveControl := OKButton;


    if Form.ShowModal() = mrOk then
      MsgBox('You clicked OK.', mbInformation, MB_OK);
  finally
    Form.Free();
  end;
end;



procedure CreateTheWizardPages;
   var
      appname : String;
      Lbl11 : TLabel;
begin
  { TButton and others }

  appname := 'COVISE';
  Page := CreateCustomPage(wpWelcome, 'COVISE Installation','Collaborative Visualisation and Simulation Environment');


  Lbl11 := TLabel.Create(Page);
  Lbl11.Caption :='This is an LGPL version of COVISE';
  Lbl11.AutoSize := True;

  Lbl11.Parent := Page.Surface;

    if IsAdminInstallMode then
    begin
  CheckInstallForAll := TCheckBox.Create(Page);
  CheckInstallForAll.Top := Lbl11.Top + Lbl11.Height + ScaleY(8);
  CheckInstallForAll.Width := Page.SurfaceWidth;
  CheckInstallForAll.Height := ScaleY(17);
  CheckInstallForAll.Caption := 'Install ' + appname + ' for all users?';
  CheckInstallForAll.Checked := True;
  CheckInstallForAll.Parent := Page.Surface;
                                                  
    if RegValueExists(HKLM, 'Software\Autodesk\Revit\2026\Add-Ons', '(Standard)') then
    begin
     CheckInstallRevitPlugin := TCheckBox.Create(Page);
     CheckInstallRevitPlugin.Top := Lbl11.Top + Lbl11.Height + ScaleY(8);
     CheckInstallRevitPlugin.Width := Page.SurfaceWidth;
     CheckInstallRevitPlugin.Height := ScaleY(17);
     CheckInstallRevitPlugin.Caption := 'Install Revit plugin?';
     CheckInstallRevitPlugin.Checked := True;
     CheckInstallRevitPlugin.Parent := Page.Surface;
    end;


    end;

  {note: in CyberClassroom installations there is no remote daemon}
  CheckInstallcoviseDaemon := TCheckBox.Create(Page);
    if IsAdminInstallMode then
    begin
  CheckInstallcoviseDaemon.Top := CheckInstallForAll.Top + CheckInstallForAll.Height + ScaleY(8);
  end
  else begin
  CheckInstallcoviseDaemon.Top := Lbl11.Top + Lbl11.Height + ScaleY(8);
  end;
  CheckInstallcoviseDaemon.Width := Page.SurfaceWidth;
  CheckInstallcoviseDaemon.Height := ScaleY(17);
  CheckInstallcoviseDaemon.Checked := False;
  CheckInstallcoviseDaemon.Caption := 'Start COVISE Daemon automatically for current user?';
  CheckInstallcoviseDaemon.Parent := Page.Surface;

    if IsAdminInstallMode then
    begin
  CheckInstallcoviseDaemonForAll := TCheckBox.Create(Page);
  CheckInstallcoviseDaemonForAll.Top := CheckInstallcoviseDaemon.Top + CheckInstallcoviseDaemon.Height + ScaleY(8);
  CheckInstallcoviseDaemonForAll.Width := Page.SurfaceWidth;
  CheckInstallcoviseDaemonForAll.Height := ScaleY(17);
  CheckInstallcoviseDaemonForAll.Checked := False;
  CheckInstallcoviseDaemonForAll.Caption := 'Start COVISE Daemon automatically for all users?';
  CheckInstallcoviseDaemonForAll.Parent := Page.Surface;

    end;

  UNCPathName := TEdit.Create(Page);
  UNCPathName.Parent := Page.Surface;
  UNCPathName.Top := CheckInstallcoviseDaemon.Top + CheckInstallcoviseDaemon.Height + ScaleY(8) + ScaleY(17) + ScaleY(17);

end;
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if CurPageID = 2 then
  begin
     UNCPathName.Text := ExpandConstant('{app}');
  end;
  Result := true;


end;

procedure AboutButtonOnClick(Sender: TObject);
begin
  MsgBox('This Wizard allows to install and configure COVISE', mbInformation, mb_Ok);
end;



procedure URLLabelOnClick(Sender: TObject);
var
  ErrorCode: Integer;
begin
  ShellExec('open', 'https://www.hlrs.de/solutions/types-of-computing/visualization/', '', '', SW_SHOWNORMAL, ewNoWait, ErrorCode);
end;





procedure InitializeWizard();
var
  AboutButton, CancelButton: TButton;
  URLLabel: TNewStaticText;
  BackgroundBitmapImage: TBitmapImage;
  BackgroundBitmapText: TNewStaticText;
begin
  { Custom wizard pages }


  CreateTheWizardPages;

  { Other custom controls }

  CancelButton := WizardForm.CancelButton;

  AboutButton := TButton.Create(WizardForm);
  AboutButton.Left := WizardForm.ClientWidth - CancelButton.Left - CancelButton.Width;
  AboutButton.Top := CancelButton.Top;
  AboutButton.Width := CancelButton.Width;
  AboutButton.Height := CancelButton.Height;
  AboutButton.Caption := '&About...';
  AboutButton.OnClick := @AboutButtonOnClick;
  AboutButton.Parent := WizardForm;

  URLLabel := TNewStaticText.Create(WizardForm);
  URLLabel.Caption := 'www.hlrs.de';
  URLLabel.Cursor := crHand;
  URLLabel.OnClick := @URLLabelOnClick;
  URLLabel.Parent := WizardForm;
  { Alter Font *after* setting Parent so the correct defaults are inherited first }
  URLLabel.Font.Style := URLLabel.Font.Style + [fsUnderline];
  URLLabel.Font.Color := clBlue;
  URLLabel.Top := AboutButton.Top + AboutButton.Height - URLLabel.Height - 2;
  URLLabel.Left := AboutButton.Left + AboutButton.Width + ScaleX(20);

  BackgroundBitmapImage := TBitmapImage.Create(MainForm);
  BackgroundBitmapImage.Left := 50;
  BackgroundBitmapImage.Top := 100;
  BackgroundBitmapImage.AutoSize := True;
  BackgroundBitmapImage.Bitmap := WizardForm.WizardBitmapImage.Bitmap;
  BackgroundBitmapImage.Parent := MainForm;

  BackgroundBitmapText := TNewStaticText.Create(MainForm);
  BackgroundBitmapText.Left := BackgroundBitmapImage.Left;
  BackgroundBitmapText.Top := BackgroundBitmapImage.Top + BackgroundBitmapImage.Height + ScaleY(8);
  BackgroundBitmapText.Caption := 'TBitmapImage';
  BackgroundBitmapText.Parent := MainForm;


end;

      
procedure CurStepChanged(CurStep: TSetupStep);
var
   filecontent, filename: String;
begin
if CurStep = ssPostInstall then begin
  filecontent :=  '<?xml version="1.0" encoding="utf-8"?>'+ #13#10 +
'<RevitAddIns>'+ #13#10 +
'  <AddIn Type="Application">'+ #13#10 +
'    <Name>COVERToolbar</Name>'+ #13#10 +
'    <Assembly>'+ExpandConstant('{#DLIB}')+'\OpenCOVERPlugin.dll</Assembly>'+ #13#10 +
'    <AddInId>10a97048-ef29-446a-a2ef-ad092b7cd2cf</AddInId>'+ #13#10 +
'    <FullClassName>OpenCOVERPlugin.COVERToolbar</FullClassName>'+ #13#10 +
'    <VendorId>HLRS</VendorId>'+ #13#10 +
'    <VendorDescription>www.hlrs.de</VendorDescription>'+ #13#10 +
'  </AddIn>'+ #13#10 +
'</RevitAddIns>'+ #13#10
  filename := ExpandConstant('{commonappdata}\Autodesk\Revit\Addins\2026\OpenCOVER.addin');
  SaveStringToFile(filename, filecontent, False);  
  filecontent :=  '<?xml version="1.0" encoding="utf-8"?>'+ #13#10 +
'<RevitAddIns>'+ #13#10 +
'  <AddIn Type="Application">'+ #13#10 +
'    <Name>OpenFOAMInterface</Name>'+ #13#10 +
'    <Assembly>'+ExpandConstant('{#DLIB}')+'\OpenFOAMInterface.dll</Assembly>'+ #13#10 +
'    <ClientId>dacafd6c-f520-4bfa-838d-12d44b65d355</ClientId>'+ #13#10 +
'    <FullClassName>OpenFOAMInterface.BIM.OpenFOAMInterfaceApp</FullClassName>'+ #13#10 +
'    <VendorId>HLRS</VendorId>'+ #13#10 +
'    <VendorDescription>www.hlrs.de</VendorDescription>'+ #13#10 +
'  </AddIn>'+ #13#10 +
'</RevitAddIns>'+ #13#10
  filename := ExpandConstant('{commonappdata}\Autodesk\Revit\Addins\2026\OpenFOAMInterface.addin');
  SaveStringToFile(filename, filecontent, False);
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
if CurUninstallStep = usPostUninstall then begin
  // uninstall script
  
  end;
end;

function InstallForAll(): Boolean;
begin

  Result := False;
  if IsAdminInstallMode then
  begin
     Result := CheckInstallForAll.Checked;
  end;
end;     

function InstallRevitPlugin(): Boolean;
begin

  Result := False;
  if IsAdminInstallMode then
  begin
     Result := CheckInstallRevitPlugin.Checked;
  end;
end;



function InstallForUser(): Boolean;
begin
     Result := NOT InstallForAll();
end;



function InstallcoviseDaemonForAll(): Boolean;
begin
  Result := False;
  if IsAdminInstallMode then
  begin
     Result := CheckInstallcoviseDaemonForAll.Checked;
  end;
end;

function getUNCPath(): String;
begin
     Result := UNCPathName.Text;
end;


function getShortAppDir(appName: String ): String;
begin
     if UNCPathName.Text = '' then
     begin
        Result := appName;
     end
     else begin
        Result := GetShortName(UNCPathName.Text);
     end;
end;
function InstallcoviseDaemonForUser(): Boolean;
begin
     Result := CheckInstallcoviseDaemon.Checked;
end;




function GetWithForwardSlashes(Param: String): String;
var
  mytmpstr : String;
begin
  mytmpstr := ExpandConstant(Param);
  StringChangeEx(mytmpstr, '\', '/', True);
  Result := mytmpstr;
end;



begin
   {body of program Setup}
end.
